import styles from "./style/Style.module.css";
import type { Skill } from "@/domain/entities/skill/Skill";

const podiumIcons = ["ü•á", "ü•à", "ü•â"];
const scoreIcon = "üèÜ";

const Competition = () => {
    const skill: Skill = {
        id: "1",
        name: "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
        description: "–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–∞–π—Ç–æ–≤, –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤ –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤.",
        topResult: [
            { user: { fullname: "–î—Ä–µ–≤–æ–≤ –î–∞–Ω–∏–∏–ª", group: "–ò–°-23", id: "u1", telegramUser: "@alihan" }, time: "12:45", score: 9 },
            { user: { fullname: "–í–∏–∫–∞", group: "–ò–°-22", id: "u2", telegramUser: "@vika" }, time: "15:10", score: 8 },
            { user: { fullname: "–î–∞–Ω–∏—è—Ä", group: "–ò–°-21", id: "u3", telegramUser: "@daniyar" }, time: "20:05", score: 7 },
            { user: { fullname: "–ê–∑–∞–º–∞—Ç", group: "–ò–°-22", id: "u4", telegramUser: "@azamat" }, time: "21:15", score: 6 },
        ],
    };

    const sortedResults = [...skill.topResult].sort((a, b) => b.score - a.score);
    const podium = sortedResults.slice(0, 3);
    const others = sortedResults.slice(3);

    const handleStartTest = () => {
        alert("–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞!");
    };

    return (
        <div className={styles.competitionContainer}>
            <h1 className={styles.competitionTitle}>{skill.name}</h1>
            <p className={styles.skillDescription}>{skill.description}</p>

            {/* –ü–û–î–ò–£–ú */}
            <div className={styles.podium}>
                {[1, 0, 2].map((position) => {
                    const result = podium[position];
                    if (!result) return null;
                    return (
                        <div key={position} className={`${styles.podiumPlace} ${styles[`place${position + 1}`]}`}>
                            <div className={styles.podiumContent}>
                                <span className={styles.podiumIcon}>{podiumIcons[position]}</span>
                                <span className={styles.userName}>{result.user.fullname}</span>
                                {result.user.group && <span className={styles.userGroup}>{result.user.group}</span>}
                                <span className={styles.score}>{scoreIcon} {result.score} –±–∞–ª–ª–æ–≤</span>
                                {result.time && <span className={styles.time}>‚è± {result.time}</span>}
                            </div>
                        </div>
                    );
                })}
            </div>

            {/* –°–ü–ò–°–û–ö –û–°–¢–ê–õ–¨–ù–´–• */}
            <div className={styles.resultsTable}>
                {others.length > 0 ? (
                    others.map((result, index) => (
                        <div key={index} className={styles.resultRow}>
                            <div className={styles.left}>
                                <span className={styles.placeNumber}>#{index + 4}</span>
                                <div className={styles.resultInfo}>
                                    <span className={styles.userName}>{result.user.fullname}</span>
                                    {result.user.group && <span className={styles.userGroup}>{result.user.group}</span>}
                                </div>
                            </div>
                            <div className={styles.right}>
                                {result.time && <span className={styles.time}>‚è± {result.time}</span>}
                                <span className={styles.score}>{scoreIcon} {result.score}</span>
                            </div>
                        </div>
                    ))
                ) : (
                    <p className={styles.noResults}>–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ—à—ë–ª —Ç–µ—Å—Ç</p>
                )}
            </div>

            <button className={styles.startTestButton} onClick={handleStartTest}>
                –ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç
            </button>
        </div>
    );
};

export default Competition;
