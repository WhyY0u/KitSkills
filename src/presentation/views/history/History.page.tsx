import { useState } from "react";
import styles from "./style/Style.module.css";

interface Winner {
    place: number;
    name: string;
}

interface HistoryItem {
    year: number;
    winners: Winner[];
    description?: string;
}

interface HistoryData {
    [skillName: string]: HistoryItem[];
}

// –î–∞–Ω–Ω—ã–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
const historyData: HistoryData = {
    "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": [
        {
            year: 2023,
            winners: [
                { place: 1, name: "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" },
                { place: 2, name: "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤" },
                { place: 3, name: "–ê–ª–∏–±–µ–∫ –°–µ–∏—Ç–æ–≤" },
            ],
            description:
                "–°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-—Å–∞–π—Ç–æ–≤ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, —Ä–∞–±–æ—Ç–∞ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º –∏ –±—ç–∫–µ–Ω–¥–æ–º, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ UX/UI.",
        },
        {
            year: 2022,
            winners: [
                { place: 1, name: "–ú–∞—Ä–∏—è –°–º–∏—Ä–Ω–æ–≤–∞" },
                { place: 2, name: "–î–∞–Ω–∏–ª –ñ—É–∫–æ–≤" },
                { place: 3, name: "–ö–∏–º –ê—è–Ω" },
            ],
            description:
                "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-—Ä–µ—à–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.",
        },
    ],
    "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": [
        {
            year: 2023,
            winners: [
                { place: 1, name: "–í–∏–∫–∞ –°–æ–∫–æ–ª–æ–≤–∞" },
                { place: 2, name: "–ê–∑–∞–º–∞—Ç –ö–∞—Å—ã–º–æ–≤" },
                { place: 3, name: "–î–∞–Ω–∏—è—Ä –¢—É—Ä—Å—É–Ω–æ–≤" },
            ],
            description:
                "–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è Android –∏ iOS, UX/UI –¥–∏–∑–∞–π–Ω –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è.",
        },
    ],
};

const podiumIcons = ["üèÜ", "ü•à", "ü•â"];
const podiumColors = ["#FFD700", "#C0C0C0", "#CD7F32"];

const History = () => {
    const [selectedSkill, setSelectedSkill] = useState<string | null>(null);
    const skills = Object.keys(historyData);

    return (
        <div className={styles.history_container}>
            {!selectedSkill ? (
                <>
                    <h2 className={styles.competitionTitle}>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏—é</h2>
                    <div className={styles.skillsList}>
                        {skills.map((skill) => (
                            <div key={skill} className={styles.skillCard}>
                                <h3 className={styles.skillName}>{skill}</h3>
                                <p className={styles.skillDescription}>
                                    {historyData[skill][0].description || "–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ."}
                                </p>
                                <button
                                    className={styles.selectButton}
                                    onClick={() => setSelectedSkill(skill)}
                                >
                                    –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é
                                </button>
                            </div>
                        ))}
                    </div>
                </>
            ) : (
                <>
                    <div className={styles.headerRow}>
                        <button
                            className={styles.backButton}
                            onClick={() => setSelectedSkill(null)}
                        >
                            ‚Üê –ù–∞–∑–∞–¥
                        </button>
                        <h2 className={styles.competitionTitle}>{selectedSkill}</h2>
                    </div>

                    <p className={styles.skillDescriptionLarge}>
                        {historyData[selectedSkill][0].description}
                    </p>

                    <div className={styles.historyCards}>
                        {historyData[selectedSkill].map((item) => (
                            <div key={item.year} className={styles.historyCard}>
                                <h3 className={styles.historyYear}>{item.year} –≥–æ–¥</h3>
                                <ul className={styles.winnersList}>
                                    {item.winners.map((winner, idx) => (
                                        <li key={winner.place} className={styles.winnerItem}>
                                            <span
                                                className={styles.winnerPlace}
                                                style={{ color: podiumColors[winner.place - 1] || "#00ffcc" }}
                                            >
                                                {podiumIcons[winner.place - 1] || ""} {winner.place}-–µ –º–µ—Å—Ç–æ
                                            </span>
                                            <span className={styles.winnerName}>{winner.name}</span>
                                        </li>
                                    ))}
                                </ul>
                            </div>
                        ))}
                    </div>
                </>
            )}
        </div>
    );
};

export default History;
